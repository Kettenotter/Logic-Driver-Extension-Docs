<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Kettenotter]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/</link><image><url>https://logic-driver-extension-docs.kettenotter.de/httpdocs/lib/media/favicon.png</url><title>Kettenotter</title><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Sat, 27 Jul 2024 07:50:21 GMT</lastBuildDate><atom:link href="https://logic-driver-extension-docs.kettenotter.de/httpdocs/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Sat, 27 Jul 2024 07:50:20 GMT</pubDate><ttl>60</ttl><dc:creator/><item><title><![CDATA[How to access and cast the context]]></title><description><![CDATA[ 
 <br><br>A common way to store a pointer to the Context is on state machine start.<br>
Cast to the class and store it as a variable.<br>
But why is this problematic?<br>
You should try to always use the minimum class. If you want to move the actor don’t use AYourActor but AActor. Then you can run this part of the State Machine on any Actor easily and don’t have to rework the logic. Now you could think… then I just store a Pointer to AActor and cast it to the AYourActor when I need. But then you did cast anyway. Why not directly use the context and cast it?<br>
Cons of storing the Context as variable:<br>
→ Hard to use states in different State Machines.<br>
→ Hard to maintain/memorize which ptrs are available in which state machine.<br>
→ Not available in custom states or you have to cast to the root state machine and make some<br>Pros of using the Context and casting it:<br>
→ Easy to work with, no quess working which variables are available.<br>
→ Can it use it anywhere, copy code to any state machine, any node class<br>
→ Not any real performance difference.]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver/how-to-access-and-cast-the-context.html</link><guid isPermaLink="false">Gamedev/Plugin Docs/Logic Driver/How to access and cast the context.md</guid><pubDate>Thu, 25 Jul 2024 21:16:24 GMT</pubDate></item><item><title><![CDATA[Add Loose Tag State]]></title><description><![CDATA[ 
 <br>This node will add the loose tag while it is active.<br>
You can use it in  a Sub State-Machine and an parralel entry to apply the tag while this part is active.]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver-extension/gas-module/add-loose-tag-state.html</link><guid isPermaLink="false">Gamedev/Plugin Docs/Logic Driver Extension/GAS Module/Add Loose Tag State.md</guid><pubDate>Sat, 27 Jul 2024 07:48:46 GMT</pubDate></item><item><title><![CDATA[GAS Integration Module]]></title><description><![CDATA[ 
 <br>YO yo some infos about the plugin<br><br><a data-href="Add Loose Tag State" href="https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver-extension/gas-module/add-loose-tag-state.html" class="internal-link" target="_self" rel="noopener">Add Loose Tag State</a>]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver-extension/overview.html</link><guid isPermaLink="false">Gamedev/Plugin Docs/Logic Driver Extension/Overview.md</guid><pubDate>Sat, 27 Jul 2024 07:49:04 GMT</pubDate></item><item><title><![CDATA[Todo]]></title><description><![CDATA[ 
 <br>→ Perhaps speed up context casting to specific classes by storing them on the sm class and using it when available. Okay that makes no sense because I then would need to cast to the SM]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver-extension/todo.html</link><guid isPermaLink="false">Gamedev/Plugin Docs/Logic Driver Extension/Todo.md</guid><pubDate>Thu, 25 Jul 2024 21:19:00 GMT</pubDate></item><item><title><![CDATA[Logic Driver Extension Test]]></title><description><![CDATA[ 
 ]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver-extension/logic-driver-extension-test.html</link><guid isPermaLink="false">Gamedev/Plugin Docs/Logic Driver Extension/Logic Driver Extension Test.md</guid><pubDate>Thu, 25 Jul 2024 09:35:20 GMT</pubDate></item><item><title><![CDATA[Other]]></title><description><![CDATA[ 
 ]]></description><link>https://logic-driver-extension-docs.kettenotter.de/httpdocs/gamedev/plugin-docs/logic-driver-extension/other.html</link><guid isPermaLink="false">Gamedev/Plugin Docs/Logic Driver Extension/Other.md</guid><pubDate>Thu, 25 Jul 2024 10:30:05 GMT</pubDate></item></channel></rss>